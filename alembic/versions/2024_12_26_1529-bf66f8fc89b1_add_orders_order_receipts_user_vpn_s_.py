"""add orders, order_receipts, user_vpn_s, countries and prices  tables

Revision ID: bf66f8fc89b1
Revises: f940dde41d8d
Create Date: 2024-12-26 15:29:30.252190

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "bf66f8fc89b1"
down_revision: Union[str, None] = "f940dde41d8d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "countries",
        sa.Column("view_country", sa.String(length=255), nullable=False),
        sa.Column("key_country", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("key_country"),
    )
    op.create_table(
        "prices",
        sa.Column("view_price", sa.String(length=255), nullable=False),
        sa.Column(
            "term", sa.Integer(), nullable=False, comment="Количество времени"
        ),
        sa.Column(
            "billing_period",
            sa.Enum("day", "month", "year", name="billing_period"),
            nullable=False,
            comment="Период времени",
        ),
        sa.Column("price", sa.Integer(), nullable=False, comment="Цена"),
        sa.Column(
            "currency",
            sa.Enum("dollars", "euro", "ruble", name="price_currency"),
            nullable=False,
            comment="Валюта",
        ),
        sa.Column(
            "price_key",
            sa.String(length=255),
            nullable=True,
            comment="Ключ для цены",
        ),
        sa.Column(
            "traffic_limit",
            sa.Integer(),
            server_default="200",
            nullable=False,
            comment="Объем разрешённого трафика",
        ),
        sa.Column("country_id", sa.Integer(), nullable=False),
        sa.Column(
            "is_active", sa.Boolean(), nullable=False, comment="Статус цены"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["country_id"],
            ["countries.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("price_key"),
    )
    op.create_table(
        "user_vpn_s",
        sa.Column("vpn_key", sa.String(length=255), nullable=False),
        sa.Column(
            "status",
            sa.Enum("active", "inactive", name="status_user_vpn"),
            nullable=False,
            comment="Состояние купленного впн",
        ),
        sa.Column(
            "type_VPN",
            sa.Enum(
                "vmess", "vless", "trojan", "shadowsocks", name="type_user_vpn"
            ),
            nullable=False,
            comment="Тип впн",
        ),
        sa.Column("vpn", sa.String(length=255), nullable=False),
        sa.Column("expire", sa.DateTime(timezone=True), nullable=False),
        sa.Column("tg_user_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tg_user_id"],
            ["tg_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("vpn_key"),
    )
    op.create_table(
        "orders",
        sa.Column("price_id", sa.Integer(), nullable=False),
        sa.Column("tg_user_id", sa.Integer(), nullable=False),
        sa.Column(
            "status", sa.Boolean(), nullable=False, comment="Статус заказа"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["price_id"],
            ["prices.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tg_user_id"],
            ["tg_users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "order_receipts",
        sa.Column(
            "currency",
            sa.Enum("dollars", "euro", "ruble", name="currency"),
            nullable=False,
            comment="Валюта",
        ),
        sa.Column(
            "status",
            sa.Enum(
                "completed",
                "failed",
                "in_progress",
                name="order_receipt_status",
            ),
            nullable=False,
            comment="Статус платежа",
        ),
        sa.Column("amount", sa.Integer(), nullable=False, comment="Сумма"),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("order_receipts")
    op.drop_table("orders")
    op.drop_table("user_vpn_s")
    op.drop_table("prices")
    op.drop_table("countries")
    # ### end Alembic commands ###
