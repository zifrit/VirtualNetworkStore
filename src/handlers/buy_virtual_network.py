import logging

from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery
from sqlalchemy.ext.asyncio import AsyncSession

from src.kbs import buy_virtual_network as kbs_buy_virtual_network
from src.crud.price import country_manager, price_manager

loger = logging.getLogger(__name__)


router = Router()

billing_period = {
    "day": "–¥–µ–Ω—å",
    "month": "–º–µ—Å",
    "year": "–≥–æ–¥",
}


@router.callback_query(F.data.in_(["buy_virtual_network", "back_to_choice_county"]))
async def choice_virtual_network_county(call: CallbackQuery, db_session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–¥–µ –≤—ã–±–∏—Ä–∞—é—Ç —Å—Ç—Ä–∞–Ω—É"""
    counties = await country_manager.get_all(db_session)
    counties_data_list = [
        {
            "text": county.view_country,
            "callback_data": f"{county.key_country}-{county.id}",
        }
        for county in counties
    ]
    await call.message.edit_text(
        text="""
–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –¥–ª—è –≤–∞—à–µ–≥–æ VPN ‚¨áÔ∏è\n
‚ö†Ô∏è –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–µ–Ω VPN –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π –∏–ª–∏ —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤ ‚Äì –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. –ù–∏ –≤ –∫–æ–µ–º —Å–ª—É—á–∞–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ—Å—Ç–æ —Å—Ç—Ä–∞–Ω–æ–≤–æ–π VPN –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Å —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤!\n
‚õîÔ∏è –í—ã–±–∏—Ä–∞—è —Å—Ç—Ä–∞–Ω—É —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –º—ã –ù–ï –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —á—Ç–æ –≤–∞—à –∏–Ω—Å—Ç–∞–≥—Ä–∞–º –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –†–æ—Å—Å–∏–∏ —Å —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ IP üòÑ
        """,
        reply_markup=kbs_buy_virtual_network.choice_county_inline_buttons_builder(
            counties_data_list
        ),
    )


@router.callback_query(F.data.startswith("country-"))
async def country_price_list(
    call: CallbackQuery, state: FSMContext, db_session: AsyncSession
):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ü–µ–Ω—ã –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω—ã"""
    country_id = call.data.split("-")[-1]
    country = await country_manager.get_by_id(db_session, country_id)
    price_list = await price_manager.get_country_price(db_session, country_id)
    data_price_list = [
        {
            "back_text": f"üéüÔ∏è{price.view_price}",
            "back_callback_data": f"{price.price_key}",
        }
        for price in price_list
    ]
    answer_text = "\n".join(
        [
            f"‚îú  {price.term} {billing_period[price.billing_period.value]}: {price.view_price} (–ª–∏–º–∏—Ç - {price.traffic_limit}–≥–±)"
            for price in price_list
        ]
    )
    await state.update_data(country=country.view_country)
    await call.message.edit_text(
        text=f"""
{country.view_country}
üí∞ –õ—É—á—à–∏–π VPN –ø–æ –ª—É—á—à–µ–π —Ü–µ–Ω–µ!

{answer_text}
                """,
        reply_markup=kbs_buy_virtual_network.choice_country_tariff_inline_buttons_builder(
            prices=data_price_list
        ),
    )
